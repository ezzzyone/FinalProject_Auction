import { NgModule } from '@angular/core';
import { ChatPanelDirective, LayoutDirective, PanelDirective, ParticipantPanelItemElementsDirective, ParticipantPanelItemDirective, ParticipantsPanelDirective, StreamDirective, ToolbarAdditionalButtonsDirective, ToolbarDirective, ToolbarAdditionalPanelButtonsDirective, AdditionalPanelsDirective, ActivitiesPanelDirective, BackgroundEffectsPanelDirective } from './openvidu-angular.directive';
import * as i0 from "@angular/core";
export class OpenViduAngularDirectiveModule {
}
OpenViduAngularDirectiveModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: OpenViduAngularDirectiveModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
OpenViduAngularDirectiveModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.8", ngImport: i0, type: OpenViduAngularDirectiveModule, declarations: [ChatPanelDirective,
        LayoutDirective,
        PanelDirective,
        AdditionalPanelsDirective,
        ParticipantPanelItemDirective,
        ParticipantsPanelDirective,
        StreamDirective,
        ToolbarDirective,
        ToolbarAdditionalButtonsDirective,
        ToolbarAdditionalPanelButtonsDirective,
        ParticipantPanelItemElementsDirective,
        ActivitiesPanelDirective,
        BackgroundEffectsPanelDirective], exports: [ChatPanelDirective,
        LayoutDirective,
        PanelDirective,
        AdditionalPanelsDirective,
        ParticipantPanelItemDirective,
        ParticipantsPanelDirective,
        StreamDirective,
        ToolbarDirective,
        ToolbarAdditionalButtonsDirective,
        ToolbarAdditionalPanelButtonsDirective,
        ParticipantPanelItemElementsDirective,
        ActivitiesPanelDirective,
        BackgroundEffectsPanelDirective] });
OpenViduAngularDirectiveModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: OpenViduAngularDirectiveModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: OpenViduAngularDirectiveModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ChatPanelDirective,
                        LayoutDirective,
                        PanelDirective,
                        AdditionalPanelsDirective,
                        ParticipantPanelItemDirective,
                        ParticipantsPanelDirective,
                        StreamDirective,
                        ToolbarDirective,
                        ToolbarAdditionalButtonsDirective,
                        ToolbarAdditionalPanelButtonsDirective,
                        ParticipantPanelItemElementsDirective,
                        ActivitiesPanelDirective,
                        BackgroundEffectsPanelDirective
                    ],
                    exports: [
                        ChatPanelDirective,
                        LayoutDirective,
                        PanelDirective,
                        AdditionalPanelsDirective,
                        ParticipantPanelItemDirective,
                        ParticipantsPanelDirective,
                        StreamDirective,
                        ToolbarDirective,
                        ToolbarAdditionalButtonsDirective,
                        ToolbarAdditionalPanelButtonsDirective,
                        ParticipantPanelItemElementsDirective,
                        ActivitiesPanelDirective,
                        BackgroundEffectsPanelDirective
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlbnZpZHUtYW5ndWxhci5kaXJlY3RpdmUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvb3BlbnZpZHUtYW5ndWxhci9zcmMvbGliL2RpcmVjdGl2ZXMvdGVtcGxhdGUvb3BlbnZpZHUtYW5ndWxhci5kaXJlY3RpdmUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNOLGtCQUFrQixFQUNsQixlQUFlLEVBQ2YsY0FBYyxFQUNkLHFDQUFxQyxFQUNyQyw2QkFBNkIsRUFDN0IsMEJBQTBCLEVBQzFCLGVBQWUsRUFDZixpQ0FBaUMsRUFDakMsZ0JBQWdCLEVBQ2hCLHNDQUFzQyxFQUN0Qyx5QkFBeUIsRUFDekIsd0JBQXdCLEVBQ3hCLCtCQUErQixFQUMvQixNQUFNLDhCQUE4QixDQUFDOztBQWtDdEMsTUFBTSxPQUFPLDhCQUE4Qjs7MkhBQTlCLDhCQUE4Qjs0SEFBOUIsOEJBQThCLGlCQTlCekMsa0JBQWtCO1FBQ2xCLGVBQWU7UUFDZixjQUFjO1FBQ2QseUJBQXlCO1FBQ3pCLDZCQUE2QjtRQUM3QiwwQkFBMEI7UUFDMUIsZUFBZTtRQUNmLGdCQUFnQjtRQUNoQixpQ0FBaUM7UUFDakMsc0NBQXNDO1FBQ3RDLHFDQUFxQztRQUNyQyx3QkFBd0I7UUFDeEIsK0JBQStCLGFBRy9CLGtCQUFrQjtRQUNsQixlQUFlO1FBQ2YsY0FBYztRQUNkLHlCQUF5QjtRQUN6Qiw2QkFBNkI7UUFDN0IsMEJBQTBCO1FBQzFCLGVBQWU7UUFDZixnQkFBZ0I7UUFDaEIsaUNBQWlDO1FBQ2pDLHNDQUFzQztRQUN0QyxxQ0FBcUM7UUFDckMsd0JBQXdCO1FBQ3hCLCtCQUErQjs0SEFHcEIsOEJBQThCOzJGQUE5Qiw4QkFBOEI7a0JBaEMxQyxRQUFRO21CQUFDO29CQUNULFlBQVksRUFBRTt3QkFDYixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YsY0FBYzt3QkFDZCx5QkFBeUI7d0JBQ3pCLDZCQUE2Qjt3QkFDN0IsMEJBQTBCO3dCQUMxQixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsaUNBQWlDO3dCQUNqQyxzQ0FBc0M7d0JBQ3RDLHFDQUFxQzt3QkFDckMsd0JBQXdCO3dCQUN4QiwrQkFBK0I7cUJBQy9CO29CQUNELE9BQU8sRUFBRTt3QkFDUixrQkFBa0I7d0JBQ2xCLGVBQWU7d0JBQ2YsY0FBYzt3QkFDZCx5QkFBeUI7d0JBQ3pCLDZCQUE2Qjt3QkFDN0IsMEJBQTBCO3dCQUMxQixlQUFlO3dCQUNmLGdCQUFnQjt3QkFDaEIsaUNBQWlDO3dCQUNqQyxzQ0FBc0M7d0JBQ3RDLHFDQUFxQzt3QkFDckMsd0JBQXdCO3dCQUN4QiwrQkFBK0I7cUJBQy9CO2lCQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG5cdENoYXRQYW5lbERpcmVjdGl2ZSxcblx0TGF5b3V0RGlyZWN0aXZlLFxuXHRQYW5lbERpcmVjdGl2ZSxcblx0UGFydGljaXBhbnRQYW5lbEl0ZW1FbGVtZW50c0RpcmVjdGl2ZSxcblx0UGFydGljaXBhbnRQYW5lbEl0ZW1EaXJlY3RpdmUsXG5cdFBhcnRpY2lwYW50c1BhbmVsRGlyZWN0aXZlLFxuXHRTdHJlYW1EaXJlY3RpdmUsXG5cdFRvb2xiYXJBZGRpdGlvbmFsQnV0dG9uc0RpcmVjdGl2ZSxcblx0VG9vbGJhckRpcmVjdGl2ZSxcblx0VG9vbGJhckFkZGl0aW9uYWxQYW5lbEJ1dHRvbnNEaXJlY3RpdmUsXG5cdEFkZGl0aW9uYWxQYW5lbHNEaXJlY3RpdmUsXG5cdEFjdGl2aXRpZXNQYW5lbERpcmVjdGl2ZSxcblx0QmFja2dyb3VuZEVmZmVjdHNQYW5lbERpcmVjdGl2ZVxufSBmcm9tICcuL29wZW52aWR1LWFuZ3VsYXIuZGlyZWN0aXZlJztcblxuQE5nTW9kdWxlKHtcblx0ZGVjbGFyYXRpb25zOiBbXG5cdFx0Q2hhdFBhbmVsRGlyZWN0aXZlLFxuXHRcdExheW91dERpcmVjdGl2ZSxcblx0XHRQYW5lbERpcmVjdGl2ZSxcblx0XHRBZGRpdGlvbmFsUGFuZWxzRGlyZWN0aXZlLFxuXHRcdFBhcnRpY2lwYW50UGFuZWxJdGVtRGlyZWN0aXZlLFxuXHRcdFBhcnRpY2lwYW50c1BhbmVsRGlyZWN0aXZlLFxuXHRcdFN0cmVhbURpcmVjdGl2ZSxcblx0XHRUb29sYmFyRGlyZWN0aXZlLFxuXHRcdFRvb2xiYXJBZGRpdGlvbmFsQnV0dG9uc0RpcmVjdGl2ZSxcblx0XHRUb29sYmFyQWRkaXRpb25hbFBhbmVsQnV0dG9uc0RpcmVjdGl2ZSxcblx0XHRQYXJ0aWNpcGFudFBhbmVsSXRlbUVsZW1lbnRzRGlyZWN0aXZlLFxuXHRcdEFjdGl2aXRpZXNQYW5lbERpcmVjdGl2ZSxcblx0XHRCYWNrZ3JvdW5kRWZmZWN0c1BhbmVsRGlyZWN0aXZlXG5cdF0sXG5cdGV4cG9ydHM6IFtcblx0XHRDaGF0UGFuZWxEaXJlY3RpdmUsXG5cdFx0TGF5b3V0RGlyZWN0aXZlLFxuXHRcdFBhbmVsRGlyZWN0aXZlLFxuXHRcdEFkZGl0aW9uYWxQYW5lbHNEaXJlY3RpdmUsXG5cdFx0UGFydGljaXBhbnRQYW5lbEl0ZW1EaXJlY3RpdmUsXG5cdFx0UGFydGljaXBhbnRzUGFuZWxEaXJlY3RpdmUsXG5cdFx0U3RyZWFtRGlyZWN0aXZlLFxuXHRcdFRvb2xiYXJEaXJlY3RpdmUsXG5cdFx0VG9vbGJhckFkZGl0aW9uYWxCdXR0b25zRGlyZWN0aXZlLFxuXHRcdFRvb2xiYXJBZGRpdGlvbmFsUGFuZWxCdXR0b25zRGlyZWN0aXZlLFxuXHRcdFBhcnRpY2lwYW50UGFuZWxJdGVtRWxlbWVudHNEaXJlY3RpdmUsXG5cdFx0QWN0aXZpdGllc1BhbmVsRGlyZWN0aXZlLFxuXHRcdEJhY2tncm91bmRFZmZlY3RzUGFuZWxEaXJlY3RpdmVcblx0XVxufSlcbmV4cG9ydCBjbGFzcyBPcGVuVmlkdUFuZ3VsYXJEaXJlY3RpdmVNb2R1bGUge31cbiJdfQ==