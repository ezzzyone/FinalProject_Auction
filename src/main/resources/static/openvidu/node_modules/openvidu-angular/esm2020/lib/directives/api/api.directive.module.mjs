import { NgModule } from '@angular/core';
import { ActivitiesPanelRecordingActivityDirective } from './activities-panel.directive';
import { AdminLoginDirective, AdminRecordingsListDirective } from './admin.directive';
import { LogoDirective } from './internals.directive';
import { ParticipantPanelItemMuteButtonDirective } from './participant-panel-item.directive';
import { RecordingActivityRecordingErrorDirective, RecordingActivityRecordingsListDirective } from './recording-activity.directive';
import { StreamDisplayAudioDetectionDirective, StreamDisplayParticipantNameDirective, StreamSettingsButtonDirective } from './stream.directive';
import { ToolbarActivitiesPanelButtonDirective, ToolbarBackgroundEffectsButtonDirective, ToolbarCaptionsButtonDirective, ToolbarChatPanelButtonDirective, ToolbarDisplayLogoDirective, ToolbarDisplaySessionNameDirective, ToolbarFullscreenButtonDirective, ToolbarLeaveButtonDirective, ToolbarParticipantsPanelButtonDirective, ToolbarRecordingButtonDirective, ToolbarScreenshareButtonDirective, ToolbarSettingsButtonDirective } from './toolbar.directive';
import { AudioMutedDirective, CaptionsLangDirective, LangDirective, MinimalDirective, ParticipantNameDirective, PrejoinDirective, VideoMutedDirective } from './videoconference.directive';
import * as i0 from "@angular/core";
export class ApiDirectiveModule {
}
ApiDirectiveModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ApiDirectiveModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ApiDirectiveModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.8", ngImport: i0, type: ApiDirectiveModule, declarations: [MinimalDirective,
        LangDirective,
        CaptionsLangDirective,
        PrejoinDirective,
        VideoMutedDirective,
        AudioMutedDirective,
        ToolbarScreenshareButtonDirective,
        ToolbarFullscreenButtonDirective,
        ToolbarBackgroundEffectsButtonDirective,
        ToolbarCaptionsButtonDirective,
        ToolbarLeaveButtonDirective,
        ToolbarRecordingButtonDirective,
        ToolbarParticipantsPanelButtonDirective,
        ToolbarChatPanelButtonDirective,
        ToolbarActivitiesPanelButtonDirective,
        ToolbarDisplaySessionNameDirective,
        ToolbarDisplayLogoDirective,
        ToolbarSettingsButtonDirective,
        StreamDisplayParticipantNameDirective,
        StreamDisplayAudioDetectionDirective,
        StreamSettingsButtonDirective,
        LogoDirective,
        ParticipantPanelItemMuteButtonDirective,
        ParticipantNameDirective,
        ActivitiesPanelRecordingActivityDirective,
        RecordingActivityRecordingsListDirective,
        RecordingActivityRecordingErrorDirective,
        AdminRecordingsListDirective,
        AdminLoginDirective], exports: [MinimalDirective,
        LangDirective,
        CaptionsLangDirective,
        PrejoinDirective,
        VideoMutedDirective,
        AudioMutedDirective,
        ToolbarScreenshareButtonDirective,
        ToolbarFullscreenButtonDirective,
        ToolbarBackgroundEffectsButtonDirective,
        ToolbarCaptionsButtonDirective,
        ToolbarLeaveButtonDirective,
        ToolbarRecordingButtonDirective,
        ToolbarParticipantsPanelButtonDirective,
        ToolbarChatPanelButtonDirective,
        ToolbarActivitiesPanelButtonDirective,
        ToolbarDisplaySessionNameDirective,
        ToolbarDisplayLogoDirective,
        ToolbarSettingsButtonDirective,
        StreamDisplayParticipantNameDirective,
        StreamDisplayAudioDetectionDirective,
        StreamSettingsButtonDirective,
        LogoDirective,
        ParticipantPanelItemMuteButtonDirective,
        ParticipantNameDirective,
        ActivitiesPanelRecordingActivityDirective,
        RecordingActivityRecordingsListDirective,
        RecordingActivityRecordingErrorDirective,
        AdminRecordingsListDirective,
        AdminLoginDirective] });
ApiDirectiveModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ApiDirectiveModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ApiDirectiveModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        MinimalDirective,
                        LangDirective,
                        CaptionsLangDirective,
                        PrejoinDirective,
                        VideoMutedDirective,
                        AudioMutedDirective,
                        ToolbarScreenshareButtonDirective,
                        ToolbarFullscreenButtonDirective,
                        ToolbarBackgroundEffectsButtonDirective,
                        ToolbarCaptionsButtonDirective,
                        ToolbarLeaveButtonDirective,
                        ToolbarRecordingButtonDirective,
                        ToolbarParticipantsPanelButtonDirective,
                        ToolbarChatPanelButtonDirective,
                        ToolbarActivitiesPanelButtonDirective,
                        ToolbarDisplaySessionNameDirective,
                        ToolbarDisplayLogoDirective,
                        ToolbarSettingsButtonDirective,
                        StreamDisplayParticipantNameDirective,
                        StreamDisplayAudioDetectionDirective,
                        StreamSettingsButtonDirective,
                        LogoDirective,
                        ParticipantPanelItemMuteButtonDirective,
                        ParticipantNameDirective,
                        ActivitiesPanelRecordingActivityDirective,
                        RecordingActivityRecordingsListDirective,
                        RecordingActivityRecordingErrorDirective,
                        AdminRecordingsListDirective,
                        AdminLoginDirective
                    ],
                    exports: [
                        MinimalDirective,
                        LangDirective,
                        CaptionsLangDirective,
                        PrejoinDirective,
                        VideoMutedDirective,
                        AudioMutedDirective,
                        ToolbarScreenshareButtonDirective,
                        ToolbarFullscreenButtonDirective,
                        ToolbarBackgroundEffectsButtonDirective,
                        ToolbarCaptionsButtonDirective,
                        ToolbarLeaveButtonDirective,
                        ToolbarRecordingButtonDirective,
                        ToolbarParticipantsPanelButtonDirective,
                        ToolbarChatPanelButtonDirective,
                        ToolbarActivitiesPanelButtonDirective,
                        ToolbarDisplaySessionNameDirective,
                        ToolbarDisplayLogoDirective,
                        ToolbarSettingsButtonDirective,
                        StreamDisplayParticipantNameDirective,
                        StreamDisplayAudioDetectionDirective,
                        StreamSettingsButtonDirective,
                        LogoDirective,
                        ParticipantPanelItemMuteButtonDirective,
                        ParticipantNameDirective,
                        ActivitiesPanelRecordingActivityDirective,
                        RecordingActivityRecordingsListDirective,
                        RecordingActivityRecordingErrorDirective,
                        AdminRecordingsListDirective,
                        AdminLoginDirective
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,