import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/common";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/icon";
import * as i5 from "../../pipes/translate.pipe";
/**
 * @internal
 */
export class ProFeatureDialogTemplateComponent {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    close() {
        this.dialogRef.close();
    }
    seeMore() {
        window.open('https://docs.openvidu.io/en/stable/openvidu-pro/', '_blank')?.focus();
    }
}
ProFeatureDialogTemplateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ProFeatureDialogTemplateComponent, deps: [{ token: i1.MatDialogRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });
ProFeatureDialogTemplateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.8", type: ProFeatureDialogTemplateComponent, selector: "ov-pro-feature-template", ngImport: i0, template: `
		<h1 mat-dialog-title>{{ data.title }}</h1>
		<div mat-dialog-content>{{ data.description }}</div>
		<div mat-dialog-actions *ngIf="data.showActionButtons">
			<button mat-button (click)="seeMore()">
				<span>{{'PANEL.SEE_MORE' | translate}}</span>
				<mat-icon>open_in_new</mat-icon>
			</button>
			<button mat-button (click)="close()">{{'PANEL.CLOSE' | translate}}</button>
		</div>
	`, isInline: true, dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i4.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "directive", type: i1.MatDialogActions, selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]", inputs: ["align"] }, { kind: "pipe", type: i5.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ProFeatureDialogTemplateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'ov-pro-feature-template',
                    template: `
		<h1 mat-dialog-title>{{ data.title }}</h1>
		<div mat-dialog-content>{{ data.description }}</div>
		<div mat-dialog-actions *ngIf="data.showActionButtons">
			<button mat-button (click)="seeMore()">
				<span>{{'PANEL.SEE_MORE' | translate}}</span>
				<mat-icon>open_in_new</mat-icon>
			</button>
			<button mat-button (click)="close()">{{'PANEL.CLOSE' | translate}}</button>
		</div>
	`
                }]
        }], ctorParameters: function () { return [{ type: i1.MatDialogRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvLWZlYXR1cmUtZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL29wZW52aWR1LWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2RpYWxvZ3MvcHJvLWZlYXR1cmUtZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQWdCLGVBQWUsRUFBRSxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7O0FBSXpFOztHQUVHO0FBZ0JILE1BQU0sT0FBTyxpQ0FBaUM7SUFDN0MsWUFBbUIsU0FBMEQsRUFBa0MsSUFBZ0I7UUFBNUcsY0FBUyxHQUFULFNBQVMsQ0FBaUQ7UUFBa0MsU0FBSSxHQUFKLElBQUksQ0FBWTtJQUFHLENBQUM7SUFFbkksS0FBSztRQUNKLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELE9BQU87UUFDTixNQUFNLENBQUMsSUFBSSxDQUFDLGtEQUFrRCxFQUFFLFFBQVEsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ3BGLENBQUM7OzhIQVRXLGlDQUFpQyw4Q0FDMEMsZUFBZTtrSEFEMUYsaUNBQWlDLCtEQVpuQzs7Ozs7Ozs7OztFQVVUOzJGQUVXLGlDQUFpQztrQkFkN0MsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7RUFVVDtpQkFDRDs7MEJBRWdGLE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXREaWFsb2dSZWYsIE1BVF9ESUFMT0dfREFUQSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2RpYWxvZyc7XG5pbXBvcnQgeyBEaWFsb2dEYXRhIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2RpYWxvZy5tb2RlbCc7XG5cblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdvdi1wcm8tZmVhdHVyZS10ZW1wbGF0ZScsXG5cdHRlbXBsYXRlOiBgXG5cdFx0PGgxIG1hdC1kaWFsb2ctdGl0bGU+e3sgZGF0YS50aXRsZSB9fTwvaDE+XG5cdFx0PGRpdiBtYXQtZGlhbG9nLWNvbnRlbnQ+e3sgZGF0YS5kZXNjcmlwdGlvbiB9fTwvZGl2PlxuXHRcdDxkaXYgbWF0LWRpYWxvZy1hY3Rpb25zICpuZ0lmPVwiZGF0YS5zaG93QWN0aW9uQnV0dG9uc1wiPlxuXHRcdFx0PGJ1dHRvbiBtYXQtYnV0dG9uIChjbGljayk9XCJzZWVNb3JlKClcIj5cblx0XHRcdFx0PHNwYW4+e3snUEFORUwuU0VFX01PUkUnIHwgdHJhbnNsYXRlfX08L3NwYW4+XG5cdFx0XHRcdDxtYXQtaWNvbj5vcGVuX2luX25ldzwvbWF0LWljb24+XG5cdFx0XHQ8L2J1dHRvbj5cblx0XHRcdDxidXR0b24gbWF0LWJ1dHRvbiAoY2xpY2spPVwiY2xvc2UoKVwiPnt7J1BBTkVMLkNMT1NFJyB8IHRyYW5zbGF0ZX19PC9idXR0b24+XG5cdFx0PC9kaXY+XG5cdGBcbn0pXG5leHBvcnQgY2xhc3MgUHJvRmVhdHVyZURpYWxvZ1RlbXBsYXRlQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IocHVibGljIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPFByb0ZlYXR1cmVEaWFsb2dUZW1wbGF0ZUNvbXBvbmVudD4sIEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogRGlhbG9nRGF0YSkge31cblxuXHRjbG9zZSgpIHtcblx0XHR0aGlzLmRpYWxvZ1JlZi5jbG9zZSgpO1xuXHR9XG5cblx0c2VlTW9yZSgpIHtcblx0XHR3aW5kb3cub3BlbignaHR0cHM6Ly9kb2NzLm9wZW52aWR1LmlvL2VuL3N0YWJsZS9vcGVudmlkdS1wcm8vJywgJ19ibGFuaycpPy5mb2N1cygpO1xuXHR9XG59XG4iXX0=