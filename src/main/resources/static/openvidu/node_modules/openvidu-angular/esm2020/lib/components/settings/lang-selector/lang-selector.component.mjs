import { Component, Output, ViewChild, EventEmitter } from '@angular/core';
import { MatMenuTrigger } from '@angular/material/menu';
import { MatSelect } from '@angular/material/select';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/translate/translate.service";
import * as i2 from "../../../services/storage/storage.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/button";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/menu";
/**
 * @internal
 */
export class LangSelectorComponent {
    constructor(translateService, storageSrv) {
        this.translateService = translateService;
        this.storageSrv = storageSrv;
        this.onLangSelectorClicked = new EventEmitter();
        this.languages = [];
    }
    ngOnInit() {
        this.languages = this.translateService.getLanguagesInfo();
        this.langSelected = this.translateService.getLangSelected();
    }
    ngAfterViewInit() {
        this.menuTrigger?.menuOpened.subscribe(() => {
            this.onLangSelectorClicked.emit();
        });
        this.matSelect?.openedChange.subscribe(() => {
            this.onLangSelectorClicked.emit();
        });
    }
    onLangSelected(lang) {
        this.translateService.setLanguage(lang);
        this.storageSrv.setLang(lang);
        this.langSelected = this.translateService.getLangSelected();
    }
}
LangSelectorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: LangSelectorComponent, deps: [{ token: i1.TranslateService }, { token: i2.StorageService }], target: i0.ɵɵFactoryTarget.Component });
LangSelectorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.8", type: LangSelectorComponent, selector: "ov-lang-selector", outputs: { onLangSelectorClicked: "onLangSelectorClicked" }, viewQueries: [{ propertyName: "menuTrigger", first: true, predicate: MatMenuTrigger, descendants: true }, { propertyName: "matSelect", first: true, predicate: MatSelect, descendants: true }], ngImport: i0, template: "<button mat-flat-button [matMenuTriggerFor]=\"menu\" class=\"lang-button\">\n\t<span>{{langSelected?.name}}</span>\n\t<mat-icon>expand_more</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\">\n\t<button mat-menu-item *ngFor=\"let lang of languages\" (click)=\"onLangSelected(lang.ISO)\">\n\t\t<span>{{lang.name}}</span>\n\t</button>\n</mat-menu>", styles: [".lang-button{background-color:var(--ov-logo-background-color);color:var(--ov-text-color)}\n"], dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i4.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "component", type: i6.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i6.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i6.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: LangSelectorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ov-lang-selector', template: "<button mat-flat-button [matMenuTriggerFor]=\"menu\" class=\"lang-button\">\n\t<span>{{langSelected?.name}}</span>\n\t<mat-icon>expand_more</mat-icon>\n</button>\n<mat-menu #menu=\"matMenu\">\n\t<button mat-menu-item *ngFor=\"let lang of languages\" (click)=\"onLangSelected(lang.ISO)\">\n\t\t<span>{{lang.name}}</span>\n\t</button>\n</mat-menu>", styles: [".lang-button{background-color:var(--ov-logo-background-color);color:var(--ov-text-color)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }, { type: i2.StorageService }]; }, propDecorators: { onLangSelectorClicked: [{
                type: Output
            }], menuTrigger: [{
                type: ViewChild,
                args: [MatMenuTrigger]
            }], matSelect: [{
                type: ViewChild,
                args: [MatSelect]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZy1zZWxlY3Rvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9vcGVudmlkdS1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9zZXR0aW5ncy9sYW5nLXNlbGVjdG9yL2xhbmctc2VsZWN0b3IuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvb3BlbnZpZHUtYW5ndWxhci9zcmMvbGliL2NvbXBvbmVudHMvc2V0dGluZ3MvbGFuZy1zZWxlY3Rvci9sYW5nLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFVLE1BQU0sRUFBRSxTQUFTLEVBQUMsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7Ozs7O0FBSXJEOztHQUVHO0FBTUgsTUFBTSxPQUFPLHFCQUFxQjtJQWVqQyxZQUFvQixnQkFBa0MsRUFBVSxVQUEwQjtRQUF0RSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBZ0I7UUFkL0UsMEJBQXFCLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUU1RCxjQUFTLEdBQW9DLEVBQUUsQ0FBQztJQVk2QyxDQUFDO0lBRTlGLFFBQVE7UUFDUCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQzFELElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzdELENBQUM7SUFFRCxlQUFlO1FBQ2QsSUFBSSxDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUMzQyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDbkMsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQzNDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuQyxDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFRCxjQUFjLENBQUMsSUFBWTtRQUMxQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzdELENBQUM7O2tIQW5DVyxxQkFBcUI7c0dBQXJCLHFCQUFxQixrS0FRdEIsY0FBYyw0RUFLZCxTQUFTLGdEQzNCckIsMlZBUVc7MkZETUUscUJBQXFCO2tCQUxqQyxTQUFTOytCQUNDLGtCQUFrQjtvSUFLakIscUJBQXFCO3NCQUEvQixNQUFNO2dCQU8yQixXQUFXO3NCQUE1QyxTQUFTO3VCQUFDLGNBQWM7Z0JBS0gsU0FBUztzQkFBOUIsU0FBUzt1QkFBQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBPbkluaXQsIE91dHB1dCwgVmlld0NoaWxkLEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0TWVudVRyaWdnZXIgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9tZW51JztcbmltcG9ydCB7IE1hdFNlbGVjdCB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL3NlbGVjdCc7XG5pbXBvcnQgeyBTdG9yYWdlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL3N0b3JhZ2Uvc3RvcmFnZS5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy90cmFuc2xhdGUvdHJhbnNsYXRlLnNlcnZpY2UnO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdvdi1sYW5nLXNlbGVjdG9yJyxcblx0dGVtcGxhdGVVcmw6ICcuL2xhbmctc2VsZWN0b3IuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9sYW5nLXNlbGVjdG9yLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBMYW5nU2VsZWN0b3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQge1xuXHRAT3V0cHV0KCkgIG9uTGFuZ1NlbGVjdG9yQ2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblx0bGFuZ1NlbGVjdGVkOiB7IG5hbWU6IHN0cmluZzsgSVNPOiBzdHJpbmcgfTtcblx0bGFuZ3VhZ2VzOiB7IG5hbWU6IHN0cmluZzsgSVNPOiBzdHJpbmcgfVtdID0gW107XG5cblx0LyoqXG5cdCAqIEBpZ25vcmVcblx0ICovXG5cdEBWaWV3Q2hpbGQoTWF0TWVudVRyaWdnZXIpIHB1YmxpYyBtZW51VHJpZ2dlcjogTWF0TWVudVRyaWdnZXI7XG5cblx0LyoqXG5cdCAqIEBpZ25vcmVcblx0ICovXG5cdEBWaWV3Q2hpbGQoTWF0U2VsZWN0KSBtYXRTZWxlY3Q6IE1hdFNlbGVjdDtcblxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UsIHByaXZhdGUgc3RvcmFnZVNydjogU3RvcmFnZVNlcnZpY2UpIHt9XG5cblx0bmdPbkluaXQoKTogdm9pZCB7XG5cdFx0dGhpcy5sYW5ndWFnZXMgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuZ2V0TGFuZ3VhZ2VzSW5mbygpO1xuXHRcdHRoaXMubGFuZ1NlbGVjdGVkID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmdldExhbmdTZWxlY3RlZCgpO1xuXHR9XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHRoaXMubWVudVRyaWdnZXI/Lm1lbnVPcGVuZWQuc3Vic2NyaWJlKCgpID0+IHtcblx0XHRcdHRoaXMub25MYW5nU2VsZWN0b3JDbGlja2VkLmVtaXQoKTtcblx0XHR9KTtcblx0XHR0aGlzLm1hdFNlbGVjdD8ub3BlbmVkQ2hhbmdlLnN1YnNjcmliZSgoKSA9PiB7XG5cdFx0XHR0aGlzLm9uTGFuZ1NlbGVjdG9yQ2xpY2tlZC5lbWl0KCk7XG5cdFx0fSk7XG5cdH1cblxuXHRvbkxhbmdTZWxlY3RlZChsYW5nOiBzdHJpbmcpIHtcblx0XHR0aGlzLnRyYW5zbGF0ZVNlcnZpY2Uuc2V0TGFuZ3VhZ2UobGFuZyk7XG5cdFx0dGhpcy5zdG9yYWdlU3J2LnNldExhbmcobGFuZyk7XG5cdFx0dGhpcy5sYW5nU2VsZWN0ZWQgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuZ2V0TGFuZ1NlbGVjdGVkKCk7XG5cdH1cbn1cbiIsIjxidXR0b24gbWF0LWZsYXQtYnV0dG9uIFttYXRNZW51VHJpZ2dlckZvcl09XCJtZW51XCIgY2xhc3M9XCJsYW5nLWJ1dHRvblwiPlxuXHQ8c3Bhbj57e2xhbmdTZWxlY3RlZD8ubmFtZX19PC9zcGFuPlxuXHQ8bWF0LWljb24+ZXhwYW5kX21vcmU8L21hdC1pY29uPlxuPC9idXR0b24+XG48bWF0LW1lbnUgI21lbnU9XCJtYXRNZW51XCI+XG5cdDxidXR0b24gbWF0LW1lbnUtaXRlbSAqbmdGb3I9XCJsZXQgbGFuZyBvZiBsYW5ndWFnZXNcIiAoY2xpY2spPVwib25MYW5nU2VsZWN0ZWQobGFuZy5JU08pXCI+XG5cdFx0PHNwYW4+e3tsYW5nLm5hbWV9fTwvc3Bhbj5cblx0PC9idXR0b24+XG48L21hdC1tZW51PiJdfQ==