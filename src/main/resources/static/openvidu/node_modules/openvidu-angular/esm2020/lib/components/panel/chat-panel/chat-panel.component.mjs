import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';
import { PanelType } from '../../../models/panel.model';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/chat/chat.service";
import * as i2 from "../../../services/panel/panel.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/tooltip";
import * as i8 from "@angular/flex-layout/flex";
import * as i9 from "@angular/flex-layout/extended";
import * as i10 from "../../../pipes/linkify.pipe";
import * as i11 from "../../../pipes/translate.pipe";
/**
 *
 * The **ChatPanelComponent** is hosted inside of the {@link PanelComponent}.
 * It is in charge of displaying the session chat.
 *
 * <div class="custom-table-container">

 * <div>
 *
 * <h3>OpenVidu Angular Directives</h3>
 *
 * The ChatPanelComponent can be replaced with a custom component. It provides us the following {@link https://angular.io/guide/structural-directives Angular structural directives}
 * for doing this.
 *
 * |            **Directive**           |                 **Reference**                 |
 * |:----------------------------------:|:---------------------------------------------:|
 * |           ***ovChatPanel**          |           {@link ChatPanelDirective}          |
 *
 * <p class="component-link-text">
 * 	<span class="italic">See all {@link OpenViduAngularDirectiveModule OpenVidu Angular Directives}</span>
 * </p>
 * </div>
 * </div>
 */
export class ChatPanelComponent {
    /**
     * @ignore
     */
    constructor(chatService, panelService, cd) {
        this.chatService = chatService;
        this.panelService = panelService;
        this.cd = cd;
        this.messageList = [];
    }
    ngOnInit() {
        this.subscribeToMessages();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.scrollToBottom();
            this.chatInput.nativeElement.focus();
        }, 100);
    }
    ngOnDestroy() {
        if (this.chatMessageSubscription)
            this.chatMessageSubscription.unsubscribe();
    }
    /**
     * @ignore
     */
    eventKeyPress(event) {
        // Pressed 'Enter' key
        if (event && event.keyCode === 13) {
            event.preventDefault();
            this.sendMessage();
        }
    }
    sendMessage() {
        if (!!this.message) {
            this.chatService.sendMessage(this.message);
            this.message = '';
        }
    }
    scrollToBottom() {
        setTimeout(() => {
            try {
                this.chatScroll.nativeElement.scrollTop = this.chatScroll.nativeElement.scrollHeight;
            }
            catch (err) { }
        }, 20);
    }
    close() {
        this.panelService.togglePanel(PanelType.CHAT);
    }
    subscribeToMessages() {
        this.chatMessageSubscription = this.chatService.messagesObs.subscribe((messages) => {
            this.messageList = messages;
            if (this.panelService.isChatPanelOpened()) {
                this.scrollToBottom();
                this.cd.markForCheck();
            }
        });
    }
}
ChatPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ChatPanelComponent, deps: [{ token: i1.ChatService }, { token: i2.PanelService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
ChatPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.8", type: ChatPanelComponent, selector: "ov-chat-panel", viewQueries: [{ propertyName: "chatScroll", first: true, predicate: ["chatScroll"], descendants: true }, { propertyName: "chatInput", first: true, predicate: ["chatInput"], descendants: true }], ngImport: i0, template: "<div class=\"panel-container\" id=\"chat-container\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly none\" >\n\t<div class=\"panel-header-container\" fxFlex=\"55px\" fxLayoutAlign=\"start center\">\n\t\t<h3 class=\"panel-title\">{{ 'PANEL.CHAT.TITLE' | translate }}</h3>\n\t\t<button class=\"panel-close-button\" mat-icon-button matTooltip=\"{{ 'PANEL.CLOSE' | translate }}\" (click)=\"close()\">\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</div>\n\n\t<div class=\"text-container\" fxFlex=\"20px\">\n\t\t<p class=\"text-info\">{{ 'PANEL.CHAT.SUBTITLE' | translate }}</p>\n\t</div>\n\n\t<div class=\"messages-container\" fxFlex=\"75%\" fxLayoutAlign=\"space-evenly none\" #chatScroll>\n\t\t<div *ngFor=\"let data of messageList\" class=\"message\" [ngClass]=\"data.isLocal ? 'right' : 'left'\">\n\t\t\t<div class=\"msg-detail\">\n\t\t\t\t<div class=\"nickname-container\">\n\t\t\t\t\t<p *ngIf=\"data.isLocal\">{{ 'PANEL.CHAT.YOU' | translate }}</p>\n\t\t\t\t\t<p *ngIf=\"!data.isLocal\">{{ data.nickname }}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"msg-content\">\n\t\t\t\t\t<p [innerHTML]=\"data.message | linkify\"></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"input-container\" fxFlex=\"55px\" fxFlexOrder=\"3\" fxLayoutAlign=\"space-evenly none\">\n\t\t<textarea\n\t\t\t#chatInput\n\t\t\tmaxlength=\"500\"\n\t\t\trows=\"4\"\n\t\t\tplaceholder=\"{{ 'PANEL.CHAT.PLACEHOLDER' | translate }}\"\n\t\t\tautocomplete=\"off\"\n\t\t\t(keypress)=\"eventKeyPress($event)\"\n\t\t\t[(ngModel)]=\"message\"\n\t\t\tid=\"chat-input\"\n\t\t></textarea>\n\t\t<button mat-icon-button id=\"send-btn\" (click)=\"sendMessage()\">\n\t\t\t<mat-icon matTooltip=\"{{ 'PANEL.CHAT.SEND' | translate }}\">send</mat-icon>\n\t\t</button>\n\t</div>\n</div>\n", styles: [".panel-container{margin:20px;background-color:var(--ov-panel-background);border-radius:var(--ov-panel-radius);max-height:calc(100% - 40px);min-height:calc(100% - 40px)}.panel-header-container{padding:10px;display:flex}.panel-title{margin-left:5px;margin-top:auto;margin-bottom:auto}.panel-close-button{margin-left:auto;border-radius:var(--ov-buttons-radius)}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-thumb{background:#a7a7a7;border-radius:4px}::-webkit-scrollbar-thumb:hover{background:#7c7c7c}::-webkit-scrollbar-track{background:var(--ov-light-color);border-radius:4px}\n", ".text-container{background-color:var(--ov-light-color);color:var(--ov-panel-text-color);text-align:center;font-size:12px}.text-info{margin:3px}.messages-container{display:block!important;overflow-y:auto;overflow-x:hidden;padding:10px}.input-container{height:25px;display:flex;background-color:var(--ov-light-color);padding:10px;margin:10px;border-radius:var(--ov-panel-radius)}.input-container textarea{width:100%;height:16px;margin:auto;background-color:transparent;display:block;border:none;padding:0;word-wrap:break-word;white-space:pre-wrap;resize:none;outline:none;box-shadow:none;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.message{position:relative;padding:3px 0}.msg-detail{width:95%;display:inline-block}.msg-detail p{margin:0;font-size:14px}.nickname-container p{font-size:13px;font-weight:700;color:var(--ov-panel-text-color)}.msg-content{position:relative;border-radius:var(--ov-panel-radius);padding:8px;color:#000;width:auto;max-width:95%;font-size:13px;word-break:break-all}#send-btn{border-radius:var(--ov-buttons-radius)}.message.left .msg-detail .nickname-container{text-align:left}.message.left .msg-detail .msg-content{float:left}.message.right .msg-detail .nickname-container{text-align:right}.message.right .msg-detail .msg-content{float:right}::ng-deep a:-webkit-any-link{color:#1a73e8}\n"], dependencies: [{ kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i7.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "directive", type: i8.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { kind: "directive", type: i8.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { kind: "directive", type: i8.DefaultFlexOrderDirective, selector: "  [fxFlexOrder], [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md],  [fxFlexOrder.lg], [fxFlexOrder.xl], [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md],  [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl], [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm],  [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]", inputs: ["fxFlexOrder", "fxFlexOrder.xs", "fxFlexOrder.sm", "fxFlexOrder.md", "fxFlexOrder.lg", "fxFlexOrder.xl", "fxFlexOrder.lt-sm", "fxFlexOrder.lt-md", "fxFlexOrder.lt-lg", "fxFlexOrder.lt-xl", "fxFlexOrder.gt-xs", "fxFlexOrder.gt-sm", "fxFlexOrder.gt-md", "fxFlexOrder.gt-lg"] }, { kind: "directive", type: i8.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { kind: "directive", type: i9.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { kind: "pipe", type: i10.LinkifyPipe, name: "linkify" }, { kind: "pipe", type: i11.TranslatePipe, name: "translate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: ChatPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ov-chat-panel', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"panel-container\" id=\"chat-container\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly none\" >\n\t<div class=\"panel-header-container\" fxFlex=\"55px\" fxLayoutAlign=\"start center\">\n\t\t<h3 class=\"panel-title\">{{ 'PANEL.CHAT.TITLE' | translate }}</h3>\n\t\t<button class=\"panel-close-button\" mat-icon-button matTooltip=\"{{ 'PANEL.CLOSE' | translate }}\" (click)=\"close()\">\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</div>\n\n\t<div class=\"text-container\" fxFlex=\"20px\">\n\t\t<p class=\"text-info\">{{ 'PANEL.CHAT.SUBTITLE' | translate }}</p>\n\t</div>\n\n\t<div class=\"messages-container\" fxFlex=\"75%\" fxLayoutAlign=\"space-evenly none\" #chatScroll>\n\t\t<div *ngFor=\"let data of messageList\" class=\"message\" [ngClass]=\"data.isLocal ? 'right' : 'left'\">\n\t\t\t<div class=\"msg-detail\">\n\t\t\t\t<div class=\"nickname-container\">\n\t\t\t\t\t<p *ngIf=\"data.isLocal\">{{ 'PANEL.CHAT.YOU' | translate }}</p>\n\t\t\t\t\t<p *ngIf=\"!data.isLocal\">{{ data.nickname }}</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"msg-content\">\n\t\t\t\t\t<p [innerHTML]=\"data.message | linkify\"></p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n\t<div class=\"input-container\" fxFlex=\"55px\" fxFlexOrder=\"3\" fxLayoutAlign=\"space-evenly none\">\n\t\t<textarea\n\t\t\t#chatInput\n\t\t\tmaxlength=\"500\"\n\t\t\trows=\"4\"\n\t\t\tplaceholder=\"{{ 'PANEL.CHAT.PLACEHOLDER' | translate }}\"\n\t\t\tautocomplete=\"off\"\n\t\t\t(keypress)=\"eventKeyPress($event)\"\n\t\t\t[(ngModel)]=\"message\"\n\t\t\tid=\"chat-input\"\n\t\t></textarea>\n\t\t<button mat-icon-button id=\"send-btn\" (click)=\"sendMessage()\">\n\t\t\t<mat-icon matTooltip=\"{{ 'PANEL.CHAT.SEND' | translate }}\">send</mat-icon>\n\t\t</button>\n\t</div>\n</div>\n", styles: [".panel-container{margin:20px;background-color:var(--ov-panel-background);border-radius:var(--ov-panel-radius);max-height:calc(100% - 40px);min-height:calc(100% - 40px)}.panel-header-container{padding:10px;display:flex}.panel-title{margin-left:5px;margin-top:auto;margin-bottom:auto}.panel-close-button{margin-left:auto;border-radius:var(--ov-buttons-radius)}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-thumb{background:#a7a7a7;border-radius:4px}::-webkit-scrollbar-thumb:hover{background:#7c7c7c}::-webkit-scrollbar-track{background:var(--ov-light-color);border-radius:4px}\n", ".text-container{background-color:var(--ov-light-color);color:var(--ov-panel-text-color);text-align:center;font-size:12px}.text-info{margin:3px}.messages-container{display:block!important;overflow-y:auto;overflow-x:hidden;padding:10px}.input-container{height:25px;display:flex;background-color:var(--ov-light-color);padding:10px;margin:10px;border-radius:var(--ov-panel-radius)}.input-container textarea{width:100%;height:16px;margin:auto;background-color:transparent;display:block;border:none;padding:0;word-wrap:break-word;white-space:pre-wrap;resize:none;outline:none;box-shadow:none;font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif}.message{position:relative;padding:3px 0}.msg-detail{width:95%;display:inline-block}.msg-detail p{margin:0;font-size:14px}.nickname-container p{font-size:13px;font-weight:700;color:var(--ov-panel-text-color)}.msg-content{position:relative;border-radius:var(--ov-panel-radius);padding:8px;color:#000;width:auto;max-width:95%;font-size:13px;word-break:break-all}#send-btn{border-radius:var(--ov-buttons-radius)}.message.left .msg-detail .nickname-container{text-align:left}.message.left .msg-detail .msg-content{float:left}.message.right .msg-detail .nickname-container{text-align:right}.message.right .msg-detail .msg-content{float:right}::ng-deep a:-webkit-any-link{color:#1a73e8}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ChatService }, { type: i2.PanelService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { chatScroll: [{
                type: ViewChild,
                args: ['chatScroll']
            }], chatInput: [{
                type: ViewChild,
                args: ['chatInput']
            }] } });
//# sourceMappingURL=data:application/json;base64,