import { OverlayContainer } from '@angular/cdk/overlay';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class CdkOverlayContainer extends OverlayContainer {
    constructor() {
        super(...arguments);
        this.containerSelector = '.sidenav-main';
        this.customClass = 'cdk-overlay-container';
    }
    _createContainer() {
        const container = document.createElement('div');
        container.classList.add(this.customClass);
        let element = this.getElement(this.containerSelector);
        if (!element) {
            element = this.getElement('body');
        }
        this._containerElement = element.appendChild(container);
    }
    setSelector(selector) {
        const overlayElement = this.getElement('.' + this.customClass);
        if (overlayElement && this.containerSelector !== selector) {
            const newContainerOverlayContainer = this.getElement(selector);
            this.containerSelector = selector;
            newContainerOverlayContainer?.appendChild(overlayElement);
        }
    }
    getElement(selector) {
        return document.querySelector(selector);
    }
}
CdkOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: CdkOverlayContainer, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
CdkOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: CdkOverlayContainer });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: CdkOverlayContainer, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWNkay1vdmVybGF5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvb3BlbnZpZHUtYW5ndWxhci9zcmMvbGliL2NvbmZpZy9jdXN0b20tY2RrLW92ZXJsYXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHM0MsTUFBTSxPQUFPLG1CQUFvQixTQUFRLGdCQUFnQjtJQUR6RDs7UUFFQyxzQkFBaUIsR0FBRyxlQUFlLENBQUM7UUFDcEMsZ0JBQVcsR0FBRyx1QkFBdUIsQ0FBQztLQXVCdEM7SUF0QlUsZ0JBQWdCO1FBQ3pCLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEQsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzFDLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNiLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2xDO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELFdBQVcsQ0FBQyxRQUFnQjtRQUMzQixNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFL0QsSUFBSSxjQUFjLElBQUksSUFBSSxDQUFDLGlCQUFpQixLQUFLLFFBQVEsRUFBRTtZQUMxRCxNQUFNLDRCQUE0QixHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDL0QsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFFBQVEsQ0FBQztZQUNsQyw0QkFBNEIsRUFBRSxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDMUQ7SUFDRixDQUFDO0lBQ08sVUFBVSxDQUFDLFFBQWdCO1FBQ2xDLE9BQU8sUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6QyxDQUFDOztnSEF4QlcsbUJBQW1CO29IQUFuQixtQkFBbUI7MkZBQW5CLG1CQUFtQjtrQkFEL0IsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE92ZXJsYXlDb250YWluZXIgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDZGtPdmVybGF5Q29udGFpbmVyIGV4dGVuZHMgT3ZlcmxheUNvbnRhaW5lciB7XG5cdGNvbnRhaW5lclNlbGVjdG9yID0gJy5zaWRlbmF2LW1haW4nO1xuXHRjdXN0b21DbGFzcyA9ICdjZGstb3ZlcmxheS1jb250YWluZXInO1xuXHRwcm90ZWN0ZWQgX2NyZWF0ZUNvbnRhaW5lcigpOiB2b2lkIHtcblx0XHRjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRjb250YWluZXIuY2xhc3NMaXN0LmFkZCh0aGlzLmN1c3RvbUNsYXNzKTtcblx0XHRsZXQgZWxlbWVudCA9IHRoaXMuZ2V0RWxlbWVudCh0aGlzLmNvbnRhaW5lclNlbGVjdG9yKTtcblx0XHRpZiAoIWVsZW1lbnQpIHtcblx0XHRcdGVsZW1lbnQgPSB0aGlzLmdldEVsZW1lbnQoJ2JvZHknKTtcblx0XHR9XG5cdFx0dGhpcy5fY29udGFpbmVyRWxlbWVudCA9IGVsZW1lbnQuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcblx0fVxuXG5cdHNldFNlbGVjdG9yKHNlbGVjdG9yOiBzdHJpbmcpIHtcblx0XHRjb25zdCBvdmVybGF5RWxlbWVudCA9IHRoaXMuZ2V0RWxlbWVudCgnLicgKyB0aGlzLmN1c3RvbUNsYXNzKTtcblxuXHRcdGlmIChvdmVybGF5RWxlbWVudCAmJiB0aGlzLmNvbnRhaW5lclNlbGVjdG9yICE9PSBzZWxlY3Rvcikge1xuXHRcdFx0Y29uc3QgbmV3Q29udGFpbmVyT3ZlcmxheUNvbnRhaW5lciA9IHRoaXMuZ2V0RWxlbWVudChzZWxlY3Rvcik7XG5cdFx0XHR0aGlzLmNvbnRhaW5lclNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdFx0XHRuZXdDb250YWluZXJPdmVybGF5Q29udGFpbmVyPy5hcHBlbmRDaGlsZChvdmVybGF5RWxlbWVudCk7XG5cdFx0fVxuXHR9XG5cdHByaXZhdGUgZ2V0RWxlbWVudChzZWxlY3Rvcjogc3RyaW5nKTogRWxlbWVudCB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuXHR9XG59XG4iXX0=