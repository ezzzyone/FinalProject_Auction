import { Component } from '@angular/core';
import { PanelSettingsOptions, PanelType } from '../../../models/panel.model';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/panel/panel.service";
import * as i2 from "../../../services/platform/platform.service";
import * as i3 from "../../../services/config/openvidu-angular.config.service";
import * as i4 from "@angular/common";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/icon";
import * as i7 from "@angular/material/tooltip";
import * as i8 from "@angular/material/core";
import * as i9 from "@angular/flex-layout/flex";
import * as i10 from "@angular/flex-layout/extended";
import * as i11 from "@angular/material/list";
import * as i12 from "../../settings/video-devices/video-devices.component";
import * as i13 from "../../settings/audio-devices/audio-devices.component";
import * as i14 from "../../settings/nickname-input/nickname-input.component";
import * as i15 from "../../settings/lang-selector/lang-selector.component";
import * as i16 from "../../settings/captions/captions.component";
import * as i17 from "../../../pipes/translate.pipe";
/**
 * @internal
 */
export class SettingsPanelComponent {
    constructor(panelService, platformService, libService) {
        this.panelService = panelService;
        this.platformService = platformService;
        this.libService = libService;
        this.settingsOptions = PanelSettingsOptions;
        this.selectedOption = PanelSettingsOptions.GENERAL;
        this.showCaptions = true;
        this.isMobile = false;
    }
    ngOnInit() {
        this.isMobile = this.platformService.isMobile();
        this.subscribeToPanelToggling();
        this.subscribeToDirectives();
    }
    ngOnDestroy() {
        if (this.captionsSubs)
            this.captionsSubs.unsubscribe();
    }
    close() {
        this.panelService.togglePanel(PanelType.SETTINGS);
    }
    onSelectionChanged(option) {
        this.selectedOption = option;
    }
    subscribeToDirectives() {
        this.captionsSubs = this.libService.captionsButtonObs.subscribe((value) => {
            this.showCaptions = value;
        });
    }
    subscribeToPanelToggling() {
        this.panelSubscription = this.panelService.panelOpenedObs.subscribe((ev) => {
            if (ev.type === PanelType.SETTINGS && !!ev.expand) {
                this.selectedOption = ev.expand;
            }
        });
    }
}
SettingsPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: SettingsPanelComponent, deps: [{ token: i1.PanelService }, { token: i2.PlatformService }, { token: i3.OpenViduAngularConfigService }], target: i0.ɵɵFactoryTarget.Component });
SettingsPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.8", type: SettingsPanelComponent, selector: "ov-settings-panel", ngImport: i0, template: "<div class=\"panel-container\" id=\"settings-container\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly none\">\n\t<div class=\"panel-header-container\" fxFlex=\"55px\" fxLayoutAlign=\"start center\">\n\t\t<h3 class=\"panel-title\">{{ 'PANEL.SETTINGS.TITLE' | translate }}</h3>\n\t\t<button class=\"panel-close-button\" mat-icon-button matTooltip=\"{{ 'PANEL.CLOSE' | translate }}\" (click)=\"close()\">\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</div>\n\n\t<div class=\"settings-container\" fxFlex=\"100%\" fxLayoutAlign=\"space-evenly none\">\n\t\t<div class=\"item-menu\" [ngClass]=\"{ mobile: isMobile }\">\n\t\t\t<mat-selection-list\n\t\t\t\t#optionList\n\t\t\t\t(selectionChange)=\"onSelectionChanged(optionList.selectedOptions.selected[0]?.value)\"\n\t\t\t\t[multiple]=\"false\"\n\t\t\t>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"general-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.GENERAL\"\n\t\t\t\t\t[value]=\"settingsOptions.GENERAL\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>manage_accounts</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.GENERAL' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"video-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.VIDEO\"\n\t\t\t\t\t[value]=\"settingsOptions.VIDEO\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>videocam</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.VIDEO' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"audio-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.AUDIO\"\n\t\t\t\t\t[value]=\"settingsOptions.AUDIO\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>mic</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.AUDIO' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\t*ngIf=\"showCaptions\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.CAPTIONS\"\n\t\t\t\t\t[value]=\"settingsOptions.CAPTIONS\"\n\t\t\t\t\tid=\"captions-opt\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>closed_caption</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.CAPTIONS' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t</mat-selection-list>\n\t\t</div>\n\n\t\t<div class=\"item-content\">\n\t\t\t<div *ngIf=\"selectedOption === settingsOptions.GENERAL\">\n\t\t\t\t<ov-nickname-input></ov-nickname-input>\n\t\t\t\t<mat-list>\n\t\t\t\t\t<mat-list-item>\n\t\t\t\t\t\t<mat-icon mat-list-icon>language</mat-icon>\n\t\t\t\t\t\t<div mat-line>{{ 'PANEL.SETTINGS.LANGUAGE' | translate }}</div>\n\t\t\t\t\t\t<ov-lang-selector></ov-lang-selector>\n\t\t\t\t\t</mat-list-item>\n\t\t\t\t</mat-list>\n\t\t\t</div>\n\t\t\t<ov-video-devices-select *ngIf=\"selectedOption === settingsOptions.VIDEO\"></ov-video-devices-select>\n\t\t\t<ov-audio-devices-select *ngIf=\"selectedOption === settingsOptions.AUDIO\"></ov-audio-devices-select>\n\t\t\t<ov-captions-settings *ngIf=\"selectedOption === settingsOptions.CAPTIONS && showCaptions\"></ov-captions-settings>\n\t\t</div>\n\t</div>\n</div>\n", styles: [".panel-container{margin:20px;background-color:var(--ov-panel-background);border-radius:var(--ov-panel-radius);max-height:calc(100% - 40px);min-height:calc(100% - 40px)}.panel-header-container{padding:10px;display:flex}.panel-title{margin-left:5px;margin-top:auto;margin-bottom:auto}.panel-close-button{margin-left:auto;border-radius:var(--ov-buttons-radius)}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-thumb{background:#a7a7a7;border-radius:4px}::-webkit-scrollbar-thumb:hover{background:#7c7c7c}::-webkit-scrollbar-track{background:var(--ov-light-color);border-radius:4px}\n", ".settings-container{display:flex;padding:10px}.item-menu{padding-right:5px;border-right:1px solid var(--ov-secondary-color);width:170px}.item-menu.mobile{width:50px!important}.item-content{padding:16px;flex-grow:1;width:min-content}.option{border-radius:var(--ov-panel-radius)}.lang-container button{width:100%}mat-list-option[aria-selected=true]{background:var(--ov-tertiary-color);font-weight:700!important;color:var(--ov-panel-background)}::ng-deep .mat-list-item-content{padding:5px!important}\n"], dependencies: [{ kind: "directive", type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.MatButton, selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i7.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }, { kind: "directive", type: i8.MatLine, selector: "[mat-line], [matLine]" }, { kind: "directive", type: i9.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { kind: "directive", type: i9.DefaultLayoutAlignDirective, selector: "  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]", inputs: ["fxLayoutAlign", "fxLayoutAlign.xs", "fxLayoutAlign.sm", "fxLayoutAlign.md", "fxLayoutAlign.lg", "fxLayoutAlign.xl", "fxLayoutAlign.lt-sm", "fxLayoutAlign.lt-md", "fxLayoutAlign.lt-lg", "fxLayoutAlign.lt-xl", "fxLayoutAlign.gt-xs", "fxLayoutAlign.gt-sm", "fxLayoutAlign.gt-md", "fxLayoutAlign.gt-lg"] }, { kind: "directive", type: i9.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { kind: "directive", type: i10.DefaultClassDirective, selector: "  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]", inputs: ["ngClass", "ngClass.xs", "ngClass.sm", "ngClass.md", "ngClass.lg", "ngClass.xl", "ngClass.lt-sm", "ngClass.lt-md", "ngClass.lt-lg", "ngClass.lt-xl", "ngClass.gt-xs", "ngClass.gt-sm", "ngClass.gt-md", "ngClass.gt-lg"] }, { kind: "component", type: i11.MatList, selector: "mat-list, mat-action-list", inputs: ["disableRipple", "disabled"], exportAs: ["matList"] }, { kind: "component", type: i11.MatListItem, selector: "mat-list-item, a[mat-list-item], button[mat-list-item]", inputs: ["disableRipple", "disabled"], exportAs: ["matListItem"] }, { kind: "directive", type: i11.MatListIconCssMatStyler, selector: "[mat-list-icon], [matListIcon]" }, { kind: "component", type: i11.MatSelectionList, selector: "mat-selection-list", inputs: ["disableRipple", "color", "compareWith", "disabled", "multiple"], outputs: ["selectionChange"], exportAs: ["matSelectionList"] }, { kind: "component", type: i11.MatListOption, selector: "mat-list-option", inputs: ["disableRipple", "checkboxPosition", "color", "value", "disabled", "selected"], outputs: ["selectedChange"], exportAs: ["matListOption"] }, { kind: "component", type: i12.VideoDevicesComponent, selector: "ov-video-devices-select", outputs: ["onDeviceSelectorClicked", "onVideoMutedClicked"] }, { kind: "component", type: i13.AudioDevicesComponent, selector: "ov-audio-devices-select", outputs: ["onDeviceSelectorClicked", "onAudioMutedClicked"] }, { kind: "component", type: i14.NicknameInputComponent, selector: "ov-nickname-input" }, { kind: "component", type: i15.LangSelectorComponent, selector: "ov-lang-selector", outputs: ["onLangSelectorClicked"] }, { kind: "component", type: i16.CaptionsSettingComponent, selector: "ov-captions-settings" }, { kind: "pipe", type: i17.TranslatePipe, name: "translate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.8", ngImport: i0, type: SettingsPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ov-settings-panel', template: "<div class=\"panel-container\" id=\"settings-container\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly none\">\n\t<div class=\"panel-header-container\" fxFlex=\"55px\" fxLayoutAlign=\"start center\">\n\t\t<h3 class=\"panel-title\">{{ 'PANEL.SETTINGS.TITLE' | translate }}</h3>\n\t\t<button class=\"panel-close-button\" mat-icon-button matTooltip=\"{{ 'PANEL.CLOSE' | translate }}\" (click)=\"close()\">\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</div>\n\n\t<div class=\"settings-container\" fxFlex=\"100%\" fxLayoutAlign=\"space-evenly none\">\n\t\t<div class=\"item-menu\" [ngClass]=\"{ mobile: isMobile }\">\n\t\t\t<mat-selection-list\n\t\t\t\t#optionList\n\t\t\t\t(selectionChange)=\"onSelectionChanged(optionList.selectedOptions.selected[0]?.value)\"\n\t\t\t\t[multiple]=\"false\"\n\t\t\t>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"general-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.GENERAL\"\n\t\t\t\t\t[value]=\"settingsOptions.GENERAL\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>manage_accounts</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.GENERAL' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"video-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.VIDEO\"\n\t\t\t\t\t[value]=\"settingsOptions.VIDEO\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>videocam</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.VIDEO' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\tid=\"audio-opt\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.AUDIO\"\n\t\t\t\t\t[value]=\"settingsOptions.AUDIO\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>mic</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.AUDIO' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t\t<mat-list-option\n\t\t\t\t\t*ngIf=\"showCaptions\"\n\t\t\t\t\tclass=\"option\"\n\t\t\t\t\t[selected]=\"selectedOption === settingsOptions.CAPTIONS\"\n\t\t\t\t\t[value]=\"settingsOptions.CAPTIONS\"\n\t\t\t\t\tid=\"captions-opt\"\n\t\t\t\t>\n\t\t\t\t\t<mat-icon mat-list-icon>closed_caption</mat-icon>\n\t\t\t\t\t<div mat-line *ngIf=\"!isMobile\">{{ 'PANEL.SETTINGS.CAPTIONS' | translate }}</div>\n\t\t\t\t</mat-list-option>\n\t\t\t</mat-selection-list>\n\t\t</div>\n\n\t\t<div class=\"item-content\">\n\t\t\t<div *ngIf=\"selectedOption === settingsOptions.GENERAL\">\n\t\t\t\t<ov-nickname-input></ov-nickname-input>\n\t\t\t\t<mat-list>\n\t\t\t\t\t<mat-list-item>\n\t\t\t\t\t\t<mat-icon mat-list-icon>language</mat-icon>\n\t\t\t\t\t\t<div mat-line>{{ 'PANEL.SETTINGS.LANGUAGE' | translate }}</div>\n\t\t\t\t\t\t<ov-lang-selector></ov-lang-selector>\n\t\t\t\t\t</mat-list-item>\n\t\t\t\t</mat-list>\n\t\t\t</div>\n\t\t\t<ov-video-devices-select *ngIf=\"selectedOption === settingsOptions.VIDEO\"></ov-video-devices-select>\n\t\t\t<ov-audio-devices-select *ngIf=\"selectedOption === settingsOptions.AUDIO\"></ov-audio-devices-select>\n\t\t\t<ov-captions-settings *ngIf=\"selectedOption === settingsOptions.CAPTIONS && showCaptions\"></ov-captions-settings>\n\t\t</div>\n\t</div>\n</div>\n", styles: [".panel-container{margin:20px;background-color:var(--ov-panel-background);border-radius:var(--ov-panel-radius);max-height:calc(100% - 40px);min-height:calc(100% - 40px)}.panel-header-container{padding:10px;display:flex}.panel-title{margin-left:5px;margin-top:auto;margin-bottom:auto}.panel-close-button{margin-left:auto;border-radius:var(--ov-buttons-radius)}::-webkit-scrollbar{width:8px}::-webkit-scrollbar-thumb{background:#a7a7a7;border-radius:4px}::-webkit-scrollbar-thumb:hover{background:#7c7c7c}::-webkit-scrollbar-track{background:var(--ov-light-color);border-radius:4px}\n", ".settings-container{display:flex;padding:10px}.item-menu{padding-right:5px;border-right:1px solid var(--ov-secondary-color);width:170px}.item-menu.mobile{width:50px!important}.item-content{padding:16px;flex-grow:1;width:min-content}.option{border-radius:var(--ov-panel-radius)}.lang-container button{width:100%}mat-list-option[aria-selected=true]{background:var(--ov-tertiary-color);font-weight:700!important;color:var(--ov-panel-background)}::ng-deep .mat-list-item-content{padding:5px!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PanelService }, { type: i2.PlatformService }, { type: i3.OpenViduAngularConfigService }]; } });
//# sourceMappingURL=data:application/json;base64,