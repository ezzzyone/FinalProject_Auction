import { BehaviorSubject, Observable } from 'rxjs';
import { BackgroundEffect } from '../../models/background-effect.model';
import { OpenViduService } from '../openvidu/openvidu.service';
import { ParticipantService } from '../participant/participant.service';
import { StorageService } from '../storage/storage.service';
import * as i0 from "@angular/core";
/**
 * @internal
 */
export declare class VirtualBackgroundService {
    private participantService;
    private storageService;
    private openviduService;
    backgroundSelected: BehaviorSubject<string>;
    backgroundSelectedObs: Observable<string>;
    backgrounds: BackgroundEffect[];
    constructor(participantService: ParticipantService, storageService: StorageService, openviduService: OpenViduService);
    getBackgrounds(): any[];
    isBackgroundApplied(): boolean;
    applyBackgroundFromStorage(): Promise<void>;
    applyBackground(bg: BackgroundEffect): Promise<void>;
    removeBackground(): Promise<void>;
    private replaceBackground;
    private hasSameTypeAsAbove;
    static ɵfac: i0.ɵɵFactoryDeclaration<VirtualBackgroundService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<VirtualBackgroundService>;
}
