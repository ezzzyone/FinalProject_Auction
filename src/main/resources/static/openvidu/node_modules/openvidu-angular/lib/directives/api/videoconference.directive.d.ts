import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { CaptionService } from '../../services/caption/caption.service';
import { OpenViduAngularConfigService } from '../../services/config/openvidu-angular.config.service';
import { TranslateService } from '../../services/translate/translate.service';
import * as i0 from "@angular/core";
/**
 * The **minimal** directive applies a minimal UI hiding all controls except for cam and mic.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 *  Default: `false`
 *
 * @example
 * <ov-videoconference [minimal]="true"></ov-videoconference>
 */
export declare class MinimalDirective implements OnDestroy {
    elementRef: ElementRef;
    private libService;
    /**
     * @ignore
     */
    set minimal(value: boolean);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, libService: OpenViduAngularConfigService);
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MinimalDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MinimalDirective, "ov-videoconference[minimal]", never, { "minimal": "minimal"; }, {}, never, never, false>;
}
/**
 * The **lang** directive allows set the UI language to a default language.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * **Default:** English `en`
 *
 * **Available:**
 *
 * * English: `en`
 * * Spanish: `es`
 * * German: `de`
 * * French: `fr`
 * * Chinese: `cn`
 * * Hindi: `hi`
 * * Italian: `it`
 * * Japanese: `ja`
 * * Netherlands: `nl`
 * * Portuguese: `pt`
 *
 * @example
 * <ov-videoconference [lang]="es"></ov-videoconference>
 */
export declare class LangDirective implements OnDestroy {
    elementRef: ElementRef;
    private translateService;
    /**
     * @ignore
     */
    set lang(value: string);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, translateService: TranslateService);
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LangDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LangDirective, "ov-videoconference[lang]", never, { "lang": "lang"; }, {}, never, never, false>;
}
/**
 * The **captions-lang** directive allows specify the language of room's members
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * It must be a valid [BCP-47](https://tools.ietf.org/html/bcp47) language tag like "en-US" or "es-ES".
 *
 *
 * **Default:** English `en-US`
 *
 * **Available:**
 *
 * * English: `en-US`
 * * Spanish: `es-ES`
 * * German: `de-DE`
 * * French: `fr-FR`
 * * Chinese: `zh-CN`
 * * Hindi: `hi-IN`
 * * Italian: `it-IT`
 * * Japanese: `jp-JP`
 * * Portuguese: `pt-PT`
 *
 * @example
 * <ov-videoconference [captionsLang]="es-ES"></ov-videoconference>
 */
export declare class CaptionsLangDirective implements OnDestroy {
    elementRef: ElementRef;
    private captionService;
    /**
     * @ignore
     */
    set captionsLang(value: string);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, captionService: CaptionService);
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CaptionsLangDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<CaptionsLangDirective, "ov-videoconference[captionsLang]", never, { "captionsLang": "captionsLang"; }, {}, never, never, false>;
}
/**
 * The **participantName** directive sets the participant name. It can be useful for aplications which doesn't need the prejoin page.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * @example
 * <ov-videoconference [participantName]="'OpenVidu'"></ov-videoconference>
 */
export declare class ParticipantNameDirective implements OnInit {
    elementRef: ElementRef;
    private libService;
    /**
     * @ignore
     */
    participantName: string;
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, libService: OpenViduAngularConfigService);
    /**
     * @ignore
     */
    ngOnInit(): void;
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ParticipantNameDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ParticipantNameDirective, "ov-videoconference[participantName]", never, { "participantName": "participantName"; }, {}, never, never, false>;
}
/**
 * The **prejoin** directive allows show/hide the prejoin page for selecting media devices.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * Default: `true`
 *
 * @example
 * <ov-videoconference [prejoin]="false"></ov-videoconference>
 */
export declare class PrejoinDirective implements OnDestroy {
    elementRef: ElementRef;
    private libService;
    /**
     * @ignore
     */
    set prejoin(value: boolean);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, libService: OpenViduAngularConfigService);
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrejoinDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<PrejoinDirective, "ov-videoconference[prejoin]", never, { "prejoin": "prejoin"; }, {}, never, never, false>;
}
/**
 * The **videoMuted** directive allows to join the session with camera muted/unmuted.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * Default: `false`
 *
 *
 * @example
 * <ov-videoconference [videoMuted]="true"></ov-videoconference>
 */
export declare class VideoMutedDirective implements OnDestroy {
    elementRef: ElementRef;
    private libService;
    /**
     * @ignore
     */
    set videoMuted(value: boolean);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, libService: OpenViduAngularConfigService);
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VideoMutedDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<VideoMutedDirective, "ov-videoconference[videoMuted]", never, { "videoMuted": "videoMuted"; }, {}, never, never, false>;
}
/**
 * The **audioMuted** directive allows to join the session with microphone muted/unmuted.
 *
 * It is only available for {@link VideoconferenceComponent}.
 *
 * Default: `false`
 *
 * @example
 * <ov-videoconference [audioMuted]="true"></ov-videoconference>
 */
export declare class AudioMutedDirective implements OnDestroy {
    elementRef: ElementRef;
    private libService;
    /**
     * @ignore
     */
    set audioMuted(value: boolean);
    /**
     * @ignore
     */
    constructor(elementRef: ElementRef, libService: OpenViduAngularConfigService);
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    clear(): void;
    /**
     * @ignore
     */
    update(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AudioMutedDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AudioMutedDirective, "ov-videoconference[audioMuted]", never, { "audioMuted": "audioMuted"; }, {}, never, never, false>;
}
