<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
          PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
          "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
          
<mapper namespace="com.im.home.members.MembersMapper">


	<!-- 일반회원 회원가입 INSERT -->
	<insert id="setMembersSignUp" parameterType="MembersVO">
		INSERT INTO MEMBERS VALUES (#{id}, #{passWord}, #{realName}, #{nickName}, #{email}, #{birth}, 1, #{phone}, SYSDATE(), #{roleNum}, null, 0)
	</insert>
	
	<!-- 소셜로그인 회원가입 INSERT -->
	<insert id="setSocialSignUp" parameterType="MembersVO">
		INSERT INTO MEMBERS (ID, SOCIAL, REALNAME, NICKNAME, EMAIL, BIRTH, PHONE, JOINDATE) VALUES (#{id}, #{social}, #{realName}, #{nickName}, #{email},  #{birth}, #{phone}, SYSDATE())
	</insert>
	
	<insert id="setMembersRole" parameterType="MembersVO">
		INSERT INTO MEMBERS_ROLE VALUES (#{id}, #{roleNum})
	</insert>
	
	<select id="getMembersLogin" parameterType="String" resultMap="getMembersLoginResult">
		SELECT * FROM
			MEMBERS M
				INNER JOIN
			MEMBERS_ROLE MR
				ON M.ID = MR.ID
				
				INNER JOIN
				
			ROLE R
				ON MR.ROLENUM = R.ROLENUM
			WHERE M.ID = #{id}
	</select>
	
	<resultMap type="MembersVO" id="getMembersLoginResult">
		<id column="id" property="id"/>
		<result column="passWord" property="passWord"/>
		<result column="realName" property="realName"/>
		<result column="nickName" property="nickName"/>
		<result column="email" property="email"/>
		<result column="birth" property="birth"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>		
		<result column="joinDate" property="joinDate"/>
		<result column="black" property="black"/>
		<result column="distinguish" property="distinguish"/>
		
		<collection property="roleVOs" javaType="List" ofType="RoleVO">
			<id column="roleNum" property="roleNum"/>
			<result column="roleName" property="roleName"/>
		</collection>
	</resultMap>
	
	<insert id="setMembersFileAdd" parameterType="MembersFileVO">
		INSERT INTO MEMBERS_FILE VALUES (null, #{fileName}, #{oriName}, #{id})
	</insert>
	
	<delete id="setMembersFileDelete" parameterType="MembersFileVO">
		DELETE FROM MEMBERS_FILE WHERE FILENUM = #{fileNum}
	</delete>
	
	
	<select id="getMyPage" parameterType="MembersVO" resultMap="getMyPageResult">
	
		SELECT * FROM 
	         MEMBERS M
	            INNER JOIN
	         MEMBERS_ROLE MR
	            ON M.ID = MR.ID
	            INNER JOIN
	         ROLE R
	            ON MR.ROLENUM = R.ROLENUM
	            LEFT JOIN
	         MEMBERS_FILE MF 
	            ON M.ID = MF.ID
	            WHERE M.ID = #{id}
	</select>
	
	<resultMap type="MembersVO" id="getMyPageResult">
		<id column="id" property="id"/>
		<result column="passWord" property="passWord"/>
		<result column="realName" property="realName"/>
		<result column="nickName" property="nickName"/>
		<result column="email" property="email"/>
		<result column="birth" property="birth"/>
		<result column="gender" property="gender"/>
		<result column="phone" property="phone"/>
		<result column="joinDate" property="joinDate"/>
		
		<association property="membersFileVO" javaType="MembersFileVO">
			<id column="fileNum" property="fileNum"/>
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>
			<result column="id" property="id"/>
		</association>
		
		<collection property="roleVOs" javaType="List" ofType="RoleVO">
			<id column="roleNum" property="roleNum"/>
			<result column="roleName" property="roleName"/>
		</collection>
		
		
	</resultMap>
	
	<!-- 아이디 중복체크 -->
	<select id="getIdCheck" resultType="Integer" parameterType="MembersVO">
		SELECT COUNT(ID) FROM MEMBERS WHERE ID = #{id}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="getNickNameCheck" parameterType="MembersVO" resultType="Integer">
		SELECT COUNT(NICKNAME) FROM MEMBERS WHERE NICKNAME = #{nickName}
	</select>
	
	<!-- 전화번호 중복체크 -->
	<select id="getPhoneCheck" parameterType="MembersVO" resultType="Integer">
		SELECT COUNT(PHONE) FROM MEMBERS WHERE PHONE = #{phone}
	</select>
	
	<!-- 마이페이지에서 내가 작성한 1:1문의 리스트 -->
	<select id="getInquiryList" parameterType="MembersVO" resultMap="getInquiryListResult">
		SELECT IQ.INQUIRY_NUM , M.ID, IQ.INQUIRY_CONTENTS, IQ.INQUIRY_TEXT, IQ.INQUIRY_DATE, IR.INQUIRY_RESPONSE_CONTENTS , IR.INQUIRY_RESPONSE_DATE
			FROM INQUIRY IQ 
				INNER JOIN
			MEMBERS	M
				ON M.ID = IQ.ID 
				LEFT JOIN 
			INQUIRY_RESPONSE IR
			
			ON IQ.INQUIRY_NUM  = IR.INQUIRY_NUM 
			WHERE M.ID = #{id}
				ORDER BY IQ.INQUIRY_NUM DESC;
	</select>
	
 	<resultMap type="AdminMembersVO" id="getInquiryListResult">
		<id column="inquiry_num" property="inquiry_num"/>
		<result column="id" property="id"/>
		<result column="inquiry_contents" property="inquiry_contents"/>
		<result column="inquiry_text" property="inquiry_text"/>
		<result column="inquiry_date" property="inquiry_date"/>
		
		<association property="membersVO" javaType="MembersVO">
			<id column="id" property="id"/>
		</association>
		
		<association property="inquiryResponseVO" javaType="InquiryResponseVO">
			<id column="inquiry_response_num" property="inquiry_response_num"/>
			<result column="inquiry_num" property="inquiry_num"/>
			<result column="inquiry_response_contents" property="inquiry_response_contents"/>
			<result column="inquiry_response_date" property="inquiry_response_date"/>
		</association>
	</resultMap>
	
<!-- 	<resultMap type="MembersVO" id="getInquiryListResult">
		<id column="id" property="id"/>
		
		<collection property="adminMembersVOs" javaType="List" ofType="AdminMembersVO">
			<id column="inquiry_num" property="inquiry_num"/>
			<result column="id" property="id"/>
			<result column="inquiry_contents" property="inquiry_contents"/>
			<result column="inquiry_text" property="inquiry_text"/>
			<result column="inquiry_date" property="inquiry_date"/>
		</collection>
	</resultMap> -->
	
	
	<update id="setMembersModify" parameterType="MembersVO">
		UPDATE MEMBERS SET PASSWORD=#{passWord}, NICKNAME=#{nickName}, EMAIL=#{email}, PHONE=#{phone} WHERE ID = #{id}
	</update>
	
	<delete id="setMembersDrop" parameterType="MembersVO">
		DELETE FROM MEMBERS WHERE ID = #{id}
	</delete>
	
	<!-- 카카오로 로그인 했을때 우리의 DB에 인서트 -->
	<insert id="setKakao" parameterType="MembersVO">
		INSERT INTO MEMBERS (ID, ROLENUM, NICKNAME) VALUES (#{id}, #{roleNum}, #{nickName})
	</insert>
	
	<select id="getKakaoLogin" parameterType="MembersVO" resultMap="getMembersLoginResult">
		SELECT NICKNAME, ID, ROLENUM FROM MEMBERS WHERE ID = #{id}
	</select>
	
	
	
</mapper>